--This file is licensed under the University of Illinois/NCSA Open Source
--License. See LICENSE.TXT for details.

\c false

* VARCHAR_SIZE = 100

DROP TABLE "PUBLIC"."NUMERIC_RESULTS" IF EXISTS;

CREATE TABLE "PUBLIC"."NUMERIC_RESULTS" (

  "NAME" VARCHAR(*{VARCHAR_SIZE}),

  "VALUE" INT

);

DROP TABLE "PUBLIC"."UDC_REFACTORINGS" IF EXISTS;

CREATE TABLE "PUBLIC"."UDC_REFACTORINGS" (

  "USERID" INT,

  "DESCRIPTION" VARCHAR(*{VARCHAR_SIZE}),

  "TIME" BIGINT

);

* *DSV_COL_SPLITTER = ,

* *DSV_TARGET_TABLE = "PUBLIC"."UDC_REFACTORINGS"

\mq udc-refactoring-data-trimmed.csv

INSERT INTO "PUBLIC"."NUMERIC_RESULTS" ("NAME", "VALUE")

VALUES (

'The number of unique user IDs', 

(SELECT COUNT(DISTINCT("T"."USERID")) FROM

"PUBLIC"."UDC_REFACTORINGS" "T")

);

INSERT INTO "PUBLIC"."NUMERIC_RESULTS" ("NAME", "VALUE")

VALUES (

'The total number of imported UDC events', 

(SELECT COUNT(*) FROM "PUBLIC"."UDC_REFACTORINGS")

);

* *DSV_COL_DELIM=,

* *DSV_ROW_DELIM=\n

* *DSV_TARGET_FILE=refactoring-frequencies.csv

\.

SELECT

"T"."DESCRIPTION" AS "REFACTORING",

COUNT(*) AS "FREQUENCY",

COUNT(DISTINCT("T"."USERID")) AS "USERS"

FROM "PUBLIC"."UDC_REFACTORINGS" "T"

GROUP BY "T"."DESCRIPTION"

ORDER BY "FREQUENCY" DESC, "USERS" DESC;

.;

\xq :

\p Reported the frequency and number of users of each refactoring in *{*DSV_TARGET_FILE}.

DROP TABLE "PUBLIC"."UDC_REFACTORING_FREQUENCIES" IF EXISTS;

CREATE TABLE "PUBLIC"."UDC_REFACTORING_FREQUENCIES" (

  "USERID" INT,

  "INTRODUCE_FACTORY" INT,

  "CHANGE_TYPE" INT,

  "CONVERT_ANONYMOUS_TO_NESTED" INT,

  "EXTRACT_CLASS" INT,

  "EXTRACT_CONSTANT" INT,

  "EXTRACT_INTERFACE" INT,

  "EXTRACT_LOCAL_VARIABLE" INT,

  "EXTRACT_METHOD" INT,

  "EXTRACT_SUPERCLASS" INT,

  "INFER_TYPE_ARGUMENTS" INT,

  "INLINE" INT,

  "INTRODUCE_INDIRECTION" INT,

  "INTRODUCE_PARAMETER" INT,

  "INTRODUCE_PARAMETER_OBJECT" INT,

  "MODIFY_METHOD_PARAMETERS" INT,

  "MOVE_ELEMENT" INT,

  "MOVE_INNER_TO_TOP_LEVEL" INT,

  "PROMOTE_LOCAL_VARIABLE" INT,

  "PULL_UP" INT,

  "PUSH_DOWN" INT,

  "RENAME_ELEMENT" INT,

  "SELF_ENCAPSULATE_FIELD" INT,

  "USE_SUPERTYPE" INT,

  "UNDO" INT,

  "ALL_REFACTORINGS" INT,

  "DISTINCT_REFACTORINGS" INT

);

INSERT INTO "PUBLIC"."UDC_REFACTORING_FREQUENCIES" (

  "USERID",

  "INTRODUCE_FACTORY",

  "CHANGE_TYPE",

  "CONVERT_ANONYMOUS_TO_NESTED",

  "EXTRACT_CLASS",

  "EXTRACT_CONSTANT",

  "EXTRACT_INTERFACE",

  "EXTRACT_LOCAL_VARIABLE",

  "EXTRACT_METHOD",

  "EXTRACT_SUPERCLASS",

  "INFER_TYPE_ARGUMENTS",

  "INLINE",

  "INTRODUCE_INDIRECTION",

  "INTRODUCE_PARAMETER",

  "INTRODUCE_PARAMETER_OBJECT",

  "MODIFY_METHOD_PARAMETERS",

  "MOVE_ELEMENT",

  "MOVE_INNER_TO_TOP_LEVEL",

  "PROMOTE_LOCAL_VARIABLE",

  "PULL_UP",

  "PUSH_DOWN",

  "RENAME_ELEMENT",

  "SELF_ENCAPSULATE_FIELD",

  "USE_SUPERTYPE",

  "UNDO",

  "ALL_REFACTORINGS",

  "DISTINCT_REFACTORINGS"

)

SELECT

"T"."USERID" AS "USERID",

COUNT(NULLIF("T"."DESCRIPTION" = 'introduce.factory', FALSE)) AS "INTRODUCE_FACTORY",

COUNT(NULLIF("T"."DESCRIPTION" = 'change.type', FALSE)) AS "CHANGE_TYPE",

COUNT(NULLIF("T"."DESCRIPTION" = 'convert.anonymous.to.nested', FALSE)) AS "CONVERT_ANONYMOUS_TO_NESTED",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.class', FALSE)) AS "EXTRACT_CLASS",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.constant', FALSE)) AS "EXTRACT_CONSTANT",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.interface', FALSE)) AS "EXTRACT_INTERFACE",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.local.variable', FALSE)) AS "EXTRACT_LOCAL_VARIABLE",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.method', FALSE)) AS "EXTRACT_METHOD",

COUNT(NULLIF("T"."DESCRIPTION" = 'extract.superclass', FALSE)) AS "EXTRACT_SUPERCLASS",

COUNT(NULLIF("T"."DESCRIPTION" = 'infer.type.arguments', FALSE)) AS "INFER_TYPE_ARGUMENTS",

COUNT(NULLIF("T"."DESCRIPTION" = 'inline', FALSE)) AS "INLINE",

COUNT(NULLIF("T"."DESCRIPTION" = 'introduce.indirection', FALSE)) AS "INTRODUCE_INDIRECTION",

COUNT(NULLIF("T"."DESCRIPTION" = 'introduce.parameter', FALSE)) AS "INTRODUCE_PARAMETER",

COUNT(NULLIF("T"."DESCRIPTION" = 'introduce.parameter.object', FALSE)) AS "INTRODUCE_PARAMETER_OBJECT",

COUNT(NULLIF("T"."DESCRIPTION" = 'modify.method.parameters', FALSE)) AS "MODIFY_METHOD_PARAMETERS",

COUNT(NULLIF("T"."DESCRIPTION" = 'move.element', FALSE)) AS "MOVE_ELEMENT",

COUNT(NULLIF("T"."DESCRIPTION" = 'move.inner.to.top.level', FALSE)) AS "MOVE_INNER_TO_TOP_LEVEL",

COUNT(NULLIF("T"."DESCRIPTION" = 'promote.local.variable', FALSE)) AS "PROMOTE_LOCAL_VARIABLE",

COUNT(NULLIF("T"."DESCRIPTION" = 'pull.up', FALSE)) AS "PULL_UP",

COUNT(NULLIF("T"."DESCRIPTION" = 'push.down', FALSE)) AS "PUSH_DOWN",

COUNT(NULLIF("T"."DESCRIPTION" = 'rename.element', FALSE)) AS "RENAME_ELEMENT",

COUNT(NULLIF("T"."DESCRIPTION" = 'self.encapsulate.field', FALSE)) AS "SELF_ENCAPSULATE_FIELD",

COUNT(NULLIF("T"."DESCRIPTION" = 'use.supertype', FALSE)) AS "USE_SUPERTYPE",

COUNT(NULLIF("T"."DESCRIPTION" = 'undo', FALSE)) AS "UNDO",

COUNT(NULLIF("T"."DESCRIPTION" <> 'undo', FALSE)) AS "ALL_REFACTORINGS",

COUNT(DISTINCT NULLIF("T"."DESCRIPTION", 'undo')) AS "DISTINCT_REFACTORINGS"

FROM "PUBLIC"."UDC_REFACTORINGS" "T"

GROUP BY "T"."USERID";

* *DSV_COL_DELIM=,

* *DSV_ROW_DELIM=\n

* *DSV_TARGET_FILE=user-refactoring-frequencies.csv

\x SELECT * FROM "PUBLIC"."UDC_REFACTORING_FREQUENCIES";

\p Reported the frequencies of the refactorings of each user in *{*DSV_TARGET_FILE}.

DROP TABLE "PUBLIC"."USERS_DISTINCT_REFACTORINGS" IF EXISTS;

CREATE TABLE "PUBLIC"."USERS_DISTINCT_REFACTORINGS" (

  "DISTINCT_REFACTORINGS" INT,

  "USERS" INT

);

INSERT INTO "PUBLIC"."USERS_DISTINCT_REFACTORINGS" (

  "DISTINCT_REFACTORINGS",

  "USERS"

)

SELECT

"T"."DISTINCT_REFACTORINGS" AS "DISTINCT_REFACTORINGS",

COUNT("T"."USERID") AS "USERS"

FROM "PUBLIC"."UDC_REFACTORING_FREQUENCIES" "T"

GROUP BY "T"."DISTINCT_REFACTORINGS"

ORDER BY "T"."DISTINCT_REFACTORINGS" ASC;

* *DSV_COL_DELIM=,

* *DSV_ROW_DELIM=\n

* *DSV_TARGET_FILE=users-distinct-refactorings.csv

\x SELECT * FROM "PUBLIC"."USERS_DISTINCT_REFACTORINGS";

\p Reported the number of users with each number of distinct refactorings in *{*DSV_TARGET_FILE}.

* *DSV_COL_DELIM=,

* *DSV_ROW_DELIM=\n

* *DSV_TARGET_FILE=numeric-results.csv

\x SELECT * FROM "PUBLIC"."NUMERIC_RESULTS";

