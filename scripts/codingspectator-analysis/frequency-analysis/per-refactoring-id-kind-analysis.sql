--This file is licensed under the University of Illinois/NCSA Open Source License. See LICENSE.TXT for details.

\p Computing the number of different kinds of status for every pair of refactoring ID and refactoring invocation kind.

DROP TABLE "PUBLIC"."PER_REFACTORING_ID_KIND" IF EXISTS;

CREATE TABLE "PUBLIC"."PER_REFACTORING_ID_KIND" (

  "REFACTORING_ID" VARCHAR(1000),

  "RECORDER" VARCHAR(100),

  "REFACTORING_KIND" VARCHAR(100),

  "OK_STATUS_COUNT" INT,

  "WARNING_STATUS_COUNT" INT,

  "ERROR_STATUS_COUNT" INT,

  "FATALERROR_STATUS_COUNT" INT,

  "OTHER_STATUS_COUNT" INT,

  "EMPTY_STATUS_COUNT" INT,

  "INVOKED_BY_QUICKASSIST_COUNT" INT,

  "INVOKED_THROUGH_STRUCTURED_SELECTION_COUNT" INT,

  "NAVIGATION_HISTORY_COUNT" INT,

  "PREVIEW_COUNT" INT,

  "AVG_CONFIGURATION_DURATION_IN_MILLI_SEC" BIGINT

);

INSERT INTO "PUBLIC"."PER_REFACTORING_ID_KIND" (

  "REFACTORING_ID",

  "RECORDER",

  "REFACTORING_KIND",

  "OK_STATUS_COUNT",

  "WARNING_STATUS_COUNT",

  "ERROR_STATUS_COUNT",

  "FATALERROR_STATUS_COUNT",

  "OTHER_STATUS_COUNT",

  "EMPTY_STATUS_COUNT",

  "INVOKED_BY_QUICKASSIST_COUNT",

  "INVOKED_THROUGH_STRUCTURED_SELECTION_COUNT",

  "NAVIGATION_HISTORY_COUNT",

  "PREVIEW_COUNT",

  "AVG_CONFIGURATION_DURATION_IN_MILLI_SEC"

)

SELECT

"PUBLIC"."ALL_DATA"."id" AS "REFACTORING_ID",

"PUBLIC"."ALL_DATA"."recorder" AS "RECORDER",

"PUBLIC"."ALL_DATA"."refactoring kind" AS "REFACTORING_KIND",

COUNT(CASE "PUBLIC"."ALL_DATA"."status" WHEN LIKE '_OK%' THEN 1 ELSE NULL END)
AS "OK_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."status" WHEN LIKE '_WARNING%' THEN 1 ELSE NULL
END) AS "WARNING_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."status" WHEN LIKE '_ERROR%' THEN 1 ELSE NULL
END) AS "ERROR_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."status" WHEN LIKE '_FATALERROR%' THEN 1 ELSE
NULL END) AS "FATALERROR_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."status"

WHEN LIKE '_OK%' THEN NULL

WHEN LIKE '_WARNING%' THEN NULL

WHEN LIKE '_ERROR%' THEN NULL

WHEN LIKE '_FATALERROR%' THEN NULL

WHEN LIKE '' THEN NULL

ELSE 1 END) AS "OTHER_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."status" WHEN '' THEN 1 ELSE NULL END) AS
"EMPTY_STATUS_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."invoked-by-quickassist" WHEN 'true' THEN 1 ELSE
NULL END) AS "INVOKED_BY_QUICKASSIST_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."invoked-through-structured-selection" WHEN
'true' THEN 1 ELSE NULL END) AS "INVOKED_THROUGH_STRUCTURED_SELECTION_COUNT",

COUNT(NULLIF("PUBLIC"."ALL_DATA"."navigation-history", '')) AS
"NAVIGATION_HISTORY_COUNT",

COUNT(CASE "PUBLIC"."ALL_DATA"."navigation-history" WHEN LIKE '%Previe%w%' THEN
1 ELSE NULL END) AS "PREVIEW_COUNT",

AVG(CASE WHEN "PUBLIC"."ALL_DATA"."navigation duration" = '' THEN NULL ELSE
CAST("PUBLIC"."ALL_DATA"."navigation duration" AS BIGINT) END) AS
"AVG_CONFIGURATION_DURATION_IN_MILLI_SEC"

FROM "PUBLIC"."ALL_DATA"

WHERE IS_JAVA_REFACTORING("PUBLIC"."ALL_DATA"."id") AND
"PUBLIC"."ALL_DATA"."username" LIKE 'cs-___'

GROUP BY "PUBLIC"."ALL_DATA"."id", "PUBLIC"."ALL_DATA"."recorder",
"PUBLIC"."ALL_DATA"."refactoring kind" 

ORDER BY "PUBLIC"."ALL_DATA"."id", "PUBLIC"."ALL_DATA"."recorder",
"PUBLIC"."ALL_DATA"."refactoring kind";

* *DSV_COL_DELIM =,

* *DSV_ROW_DELIM =\n

* *DSV_TARGET_FILE =PerRefactoringIDKind.csv

\x SELECT * FROM "PUBLIC"."PER_REFACTORING_ID_KIND"

